# -*- coding: utf-8 -*-
"""FIC-UNO 0.03.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OA3KjdlEFwA7ixIILZoYlZM3BgMpyHTl
"""

import random
import hashlib
import datetime as date

def barajar(M):

  k=len(M)-1
  Barajado=[]

  while (k >= 0):
    idx=random.randint(0,k)
    Barajado.append(M.pop(idx))
    k=k-1
  return Barajado


def repartir(M, NumCartas=4):
  print("Repartiendo ", NumCartas, "cartas")
  MazoNuevo=[]
  for i in range(NumCartas):
    MazoNuevo.append(M.pop(i))
  print("Le quedan ", len(MazoBarajado), "cartas en el mazo")
  return MazoNuevo

'''
Construir la función que se encarga de verificar la cantidad de cartas del jugador
recibe parametros la lista de jugadores y el número del jugador que se quiere revisar
'''

def ckartas(mano, njugador):
  continuar_jugando=True
  n=len(mano[njugador])
  if n==0:
    print("El jugador {} ha ganado!".format(njugador))
    Continuar_jugando=False
  if n==1:
    print("El jugador {} grita UNO!".format(njugador))
  return n, continuar_jugando

#el primer argumento es la lista de todos los jugadores con sus
#respectivas manos. El segundo argumento es el índice si es -1
#imprimirá de todos los jugadores, si es >= 0 imprime la mano
#de jugador con el índice indicado
def imprimeManos(Jugadores, jugador_idx=-1):
  if jugador_idx==-1:
    NJugadores=len(Jugadores)
    for i in range(NJugadores):
      print("la mano del jugador [",i,"] es ", Jugadores[i])
  elif jugador_idx < len(Jugadores):
    for i in range(len(Jugadores[jugador_idx])):
      print('{}->{}'.format(i, Jugadores[jugador_idx][i]))
  else:
    print('índice de jugador inválido')

def carta_en_pozo(Jugadores,idx, Pozo):
  Coincide=[item for item in Jugadores[idx]
            if item[0] == Pozo[-1][0]  or item[1] == Pozo[-1][1]]

  #print("\n==>> Las cartas del jugador [ {} ] que coinciden con algún valor del pozo son: {}".format(idx,Coincide))
  if len(Coincide)>0:
    return True
  else:
    return False


#definimos el mazo inicial
Mazo=2*[('Rojo',1), ('Rojo',2), ('Rojo',3),('Rojo',4), ('Rojo',5),('Rojo',6), ('Rojo',7),('Rojo',8), ('Rojo',9),
      ('Verde',1), ('Verde',2), ('Verde',3),('Verde',4), ('Verde',5),('Verde',6), ('Verde',7),('Verde',8), ('Verde',9),
      ('Azul',1), ('Azul',2), ('Azul',3),('Azul',4), ('Azul',5),('Azul',6), ('Azul',7),('Azul',8), ('Azul',9),
      ('Amarillo',1), ('Amarillo',2), ('Amarillo',3),('Amarillo',4), ('Amarillo',5),('Amarillo',6), ('Amarillo',7),('Amarillo',8), ('Amarillo',9),
      ('Amarillo','R'), ('Rojo','R'), ('Azul','R'),('Verde','R'),
      ('Amarillo','-4'), ('Rojo','-4'), ('Azul','-4'),('Verde','-4')
      ]

#Cuerpo principal
print("Bienvenido a FIC-UNO")

NCartasJugador=7
NJugadoresIncorrectos=True
NJugadores=0

K4=False  #no me gusta esto... tiene que ser un identificador...

while (NJugadores>4 or NJugadores <2):
  NJugadores=int(input('¿Cuántos jugadores? :')) #definimos en número de jugadores
  print("Número de jugadores incorrecto deben de ser 2 y hasta 4 jugadores")
  print("El número de jugadores ingresado es {}".format(NJugadores))

print('El juego inicia con {} Jugadores'.format(NJugadores))


random.shuffle(Mazo)
MazoBarajado=Mazo

Jugadores=[]    #nos aseguramos que exista la lista de jugadores
Pozo=[]         #Creamos ua lista para el pozo, donde iremos lanzando las cartas

alumno=hashlib.md5((input('introduce tu matrícula: ').encode('utf-8')))
fecha=date.datetime.now()

for i in range(NJugadores):
  Jugadores.append(repartir(MazoBarajado,7))    #WOW!!! tenemos una lista que contiene una lista que contiene tuplas!!!

imprimeManos(Jugadores)

#ahora imprimamos la mano del jugador que se designó como iniciador
for i in range(10): #para hacerla de emoción tiramos varias veces el dado
  idxJComienza=random.randint(0, NJugadores-1)  #el índice del jugador que comenzará

print("- > El jugador [",idxJComienza, "] iniciará el juego!")
print("- > Su mano es: ", Jugadores[idxJComienza])

Seguir=True
Turno=0     #contador de turnos
Sentido=1   #Sentido 1 = horario, -1 = antihorario

while Seguir:     #ciclo del juego, mientras que el jugador en turno tenga 0 cartas al final de su turno
  if len(Pozo)==0:
    print("\n===>>>  Pozo: {}  <<<=== ".format(Pozo))
  else:
    print("\n===>>>  Pozo: {}  <<<=== ".format(Pozo[-1]))

  if Turno == 0: #se pone en el Pozo la primera carta del jugador que inicia el juego
    idx=idxJComienza
    print("\nTurno {}, jugador {}".format( Turno, idx))
    Pozo.append(Jugadores[idx].pop())

  else:
    idx=(idx+Sentido)%NJugadores
    print("\nTurno {}, jugador {}".format( Turno, idx))
    imprimeManos(Jugadores, idx)

    Repite=True
    while(Repite):

      while ( carta_en_pozo(Jugadores, idx, Pozo) == False):
        print('Toca comer del mazo principal')
        Jugadores[idx].append(MazoBarajado.pop())
        imprimeManos(Jugadores, idx)

      if K4 == True:
        for i in range(4):
          Jugadores[idx].append(MazoBarajado.pop())
        K4=False

      print("\n\n===>>>  Pozo: {}  <<<=== ".format(Pozo[-1]))
      Carta_idx=int(input('¿Qué carta quieres jugar ? : '))

      try:
        if (Jugadores[idx][Carta_idx][0] == Pozo[-1][0] or
            Jugadores[idx][Carta_idx][1] == Pozo[-1][1] ):

          Pozo.append(Jugadores[idx].pop(Carta_idx))
          #la siguiente parte nos evalua si es comodín
          if (Pozo[-1][1]=='R'):
            Sentido=Sentido*-1
            print("Se cambia el sentido del juego, carta en el pozo{}".format(Pozo[-1]))
          break
          if (Pozo[-1][1]=='K4'): ## ojo, aquí se establece la instrucción pero no se ejecuta
            print('K_omodin come +4! TEEENGA!!!')
            K4=True
          break
        else:
          print('La carta elegida no coincide!!!')
      except:
        print("índice incorrecto; elige el valor de la carta que corresponda!!!")
        imprimeManos(Jugadores, idx)

  for i in range(NJugadores):
    a, b = ckartas(Jugadores, i)    #llamamos a la funcion que cuenta las cartas del jugador
    print ("al jugador {} le quedan {} cartas, continuar el juego = {}".format(i, a,b))

  Turno = Turno + 1
  if a==0:
  #if Turno==7:
    Seguir=False

print('Entregar el siguiente registro como evidencia:')
print('{}\n{}'.format(alumno.hexdigest(), fecha))